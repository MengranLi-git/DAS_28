filter(Outcome == "Killed Or Seriously Injured") %>%
spread(Outcome, Value) %>%
filter(Age == "All" & Gender == "All") %>%
select(-c(Age, Gender))
Casualties %>%
select(-c(Measurement, Units)) %>%
filter(Outcome == "Killed Or Seriously Injured") %>%
spread(Outcome, Value) %>%
filter(Age == "All" & Gender == "All")
Casualties %>%
select(-c(Measurement, Units))
Casualties %>%
dplyr::select(-c(Measurement, Units))
library(fs)
library(tidyverse)
library(tidymodels)
data_dir <- "data"
# read data document name
csv_files <- fs::dir_ls(data_dir, regexp = "\\.csv$")
# dataset name
dataset_name <- c(
"Casualties", "Expenditure", "Transport",
"Vehicles", "Cards", "Network", "Purposes"
)
# read data and assign names to dataset
for (i in 1:7) {
assign(dataset_name[i], readr::read_csv(csv_files[i]))
}
Casualties <- Casualties %>%
select(-c(Measurement, Units)) %>%
filter(Outcome == "Killed Or Seriously Injured") %>%
spread(Outcome, Value) %>%
filter(Age == "All" & Gender == "All") %>%
select(-c(Age, Gender))
Expenditure <- Expenditure %>%
select(-c(Measurement, Units)) %>%
rename(Expenditure = Value)
Transport <- Transport %>%
select(-c(Measurement, Units)) %>%
filter(`Indicator (public transport)` %in% c(
"Number Of Passenger Train Stations",
"Percentage Of Adults Reporting that they are Very or Fairly Satisfied with Public Transport"
)) %>%
spread(`Indicator (public transport)`, Value)
Vehicles <- Vehicles %>%
select(-c(Measurement, Units)) %>%
spread(`Indicator (road vehicles)`, Value)
Cards <- Cards %>%
select(-c(Measurement, Units)) %>%
spread(Age, Value) %>%
select(-`60 years and over`) %>%
rename(Cards = All)
Network <- Network %>%
select(-c(Measurement, Units)) %>%
spread(`Indicator (road network traffic)`, Value)
Purposes <- Purposes %>%
select(-c(Measurement, Units)) %>%
spread(`Indicator (travel to work)`, Value)
Data <- Expenditure %>%
left_join(Casualties,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
) %>%
left_join(Cards,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
) %>%
left_join(Network,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
) %>%
left_join(Purposes,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
) %>%
left_join(Transport,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
) %>%
left_join(Vehicles,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
)
names(Data) <- c(
"FeatureCode", "DateCode", "Expenditure", "Killed_Injured",
"Cards", "Congestion", "Repair", "Mileage", "Work_Bus",
"Business", "School", "Commuting", "Work_Cycling", "Education",
"Health", "Shopping", "Work_Train", "Work_Walking", "Train_Stations",
"Satisfaction", "One_Car", "More_Car", "Without_Car", "Petrol_Diesel"
)
glimpse(Data)
# Transform the DateCode as a factor
Data$DateCode <- as.factor(Data$DateCode)
Data %>%
ggplot( aes(x=Satisfaction)) +
geom_density(fill="#80C687", color="#80C687", alpha=0.8)
corr <- cor(na.omit(Data[, -c(1, 2)]))
x <- rep(names(Data[, -c(1, 2)]))
y <- rep(names(Data[, -c(1, 2)]))
corrplot <- expand.grid(X = x, Y = y)
corrplot$Z <- c(corr)
ggplot(corrplot, aes(X, Y, fill = Z)) +
geom_tile(aes(fill = Z, alpha = 0.7), show.legend = FALSE) +
geom_text(aes(label = round(Z, 2))) +
scale_fill_gradient2(
low = muted("#80C687"),
mid = "white",
high = muted("#FF4500"),
midpoint = 0,
breaks = c(-1, 0, 1), labels = c(-1, 0, 1),
limits = c(-1, 1)
) +
theme(
axis.text.x = element_text(
angle = 30,
vjust = .8,
hjust = 0.8
),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
summary(Data[, -c(1, 2)])
# correlation plot
corr <- cor(Data[, -c(1, 2)], na.rm = TRUE)
# correlation plot
corr <- cor(na.omit(Data[, -c(1, 2)]))
Data %>%
ggplot() +
geom_density(aes(x=Satisfaction, fill="#80C687", color="#80C687", alpha=0.8))
Data %>%
ggplot() +
geom_density(aes(x=Satisfaction), fill="#80C687", color="#80C687", alpha=0.8)
names(Data[, -c(1, 2)])
Data %>%
ggplot() +
geom_density(aes(x=Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
geom_density(aes(x=Expenditure), fill="#80C687", color="#80C687", alpha=0.8)
Data
Data[, -c(1, 2)]
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value")
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value")
ggplot() +
geom_density(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable)
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value")
ggplot() +
geom_density(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8)
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_density(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable)
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_density(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
?facet_wrap
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_density(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value", - satisfaction)
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value", - Satisfaction)
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_point(aes(x = value, y = Data$Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
test <- Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value")
View(test)
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction == rep(Data$Satisfaction, 22))
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep(Satisfaction, 22))
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate("Satisfaction" = rep(Satisfaction, 22))
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep(Data$Satisfaction, 22))
Data$Satisfaction
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep(Data$Satisfaction, 22)) %>%
ggplot() +
geom_point(aes(x = value, y = Data$Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep(Data$Satisfaction, 22)) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep(Data$Satisfaction, 22)) %>%
ggplot() +
geom_point(aes(x = Satisfaction, y = value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_density(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
summary(Data[, -c(1, 2)])
fit <- lm(Satisfaction ~ ., data = Data[, -1])
summary(fit)
outlierTest(fit)
library(car)
outlierTest(fit)
fit2 <- lm(Satisfaction ~ ., data = Data[, -c(1, 3, 4, 8, 24)])
summary(fit2)
fit3 <- lm(Satisfaction ~ ., data = Data[, -c(1, 3, 4, 8)])
summary(fit3)
fit4 <- lm(Satisfaction ~ ., data = Data[, -c(1, 3, 4)])
summary(fit4)
outlierTest(fit2)
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep(Data$Satisfaction, 22)) %>%
ggplot() +
geom_point(aes(x = Satisfaction, y = value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep(Data$Satisfaction, 22)) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
filter(Cards > 1000000)
Data[, -c(1, 2)] %>%
filter(Cards < 1000000)
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep(Satisfaction, 22))
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep(Data %>% filter(Cards < 1000000) %>% select(Satisfaction), 22)) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep((Data %>% filter(Cards < 1000000) %>% select(Satisfaction)), 22)) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = rep((Data %>% filter(Cards < 1000000) %>% select(Satisfaction)), 22))
Data %>% filter(Cards < 1000000) %>% select(Satisfaction)
rep((Data %>% filter(Cards < 1000000) %>% select(Satisfaction)), 22)
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = c(rep((Data %>% filter(Cards < 1000000) %>% select(Satisfaction)), 22))) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
c(rep((Data %>% filter(Cards < 1000000) %>% select(Satisfaction)), 22))
c(Data %>% filter(Cards < 1000000) %>% select(Satisfaction)), 22)
c(Data %>% filter(Cards < 1000000) %>% select(Satisfaction))
rep(c(Data %>% filter(Cards < 1000000) %>% select(Satisfaction)), 22)
Data["Cards" < 1000000, "Satisfaction"]
Data["Cards" < 1000000, ]
Data[Cards < 1000000, ]
Data[, "Satisfaction"]
Data["Cards",]
Data[Cards < 1000000,]
Data[, -c(1, 2)] %>%
filter(Cards < 1000000)
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>% select(Satisfaction)
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>% select(Satisfaction) %>% rep(22)
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>% select(Satisfaction) %>% as.vector()
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>% select(Satisfaction) %>% as.numeric()
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>% pull(Satisfaction)
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>% pull(Satisfaction) %>% rep(22)
Data[, -c(1, 2)] %>%
filter(Cards < 1000000) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = (Data[, -c(1, 2)] %>% filter(Cards < 1000000) %>% pull(Satisfaction) %>% rep(22))) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
filter(Train_Station < 50) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = (Data[, -c(1, 2)] %>% filter(Train_Station < 50) %>% pull(Satisfaction) %>% rep(22))) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
filter(Train_Stations < 50) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = (Data[, -c(1, 2)] %>% filter(Train_Stations < 50) %>% pull(Satisfaction) %>% rep(22))) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
filter(Train_Stations < 50)
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = (Data[, -c(1, 2)] %>% pull(Satisfaction) %>% rep(22))) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
Data[, -c(1, 2)] %>%
filter(Train_Stations > 50)
na.omit(Data[, -c(1, 2)]) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = (Data[, -c(1, 2)] %>% pull(Satisfaction) %>% rep(22))) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
na.omit(Data[, -c(1, 2)]) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = (na.omit(Data[, -c(1, 2)]) %>% pull(Satisfaction) %>% rep(22))) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
remove <- Data[, -c(1, 2)] %>%
filter(Train_Stations > 50)
View(remove)
na.moit(remove)
na.omit(remove)
Data[, -c(1, 2)] %>%
filter(Train_Stations < 50) %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = (Data[, -c(1, 2)] %>% filter(Train_Stations < 50) %>% pull(Satisfaction) %>% rep(22))) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
fit <- lm(Satisfaction ~ ., data = Data[, -1]%>%filter(Train_Stations < 50))
summary(fit)
fit <- lm(Satisfaction ~ ., data = Data[, -1])
summary(fit)
library(tidyverse)
library(fs)
library(tidymodels)
# set data path
data_dir <- "data"
# read data document name
csv_files <- fs::dir_ls(data_dir, regexp = "\\.csv$")
# dataset name
dataset_name <- c(
"Casualties", "Expenditure", "Transport",
"Vehicles", "Cards", "Network", "Purposes"
)
# read data and assign names to dataset
for (i in 1:7) {
assign(dataset_name[i], readr::read_csv(csv_files[i]))
}
Casualties <- Casualties %>%
select(-c(Measurement, Units)) %>%
filter(Outcome == "Killed Or Seriously Injured") %>%
spread(Outcome, Value) %>%
filter(Age == "All" & Gender == "All") %>%
select(-c(Age, Gender))
Expenditure <- Expenditure %>%
select(-c(Measurement, Units)) %>%
rename(Expenditure = Value)
# remove variables at the whole Scotland level
Transport <- Transport %>%
select(-c(Measurement, Units)) %>%
filter(`Indicator (public transport)` %in% c(
"Number Of Passenger Train Stations",
"Percentage Of Adults Reporting that they are Very or Fairly Satisfied with Public Transport"
)) %>%
spread(`Indicator (public transport)`, Value)
Vehicles <- Vehicles %>%
select(-c(Measurement, Units)) %>%
spread(`Indicator (road vehicles)`, Value)
# retain card numbers of all people
Cards <- Cards %>%
select(-c(Measurement, Units)) %>%
spread(Age, Value) %>%
select(-`60 years and over`) %>%
rename(Cards = All)
Network <- Network %>%
select(-c(Measurement, Units)) %>%
spread(`Indicator (road network traffic)`, Value)
Purposes <- Purposes %>%
select(-c(Measurement, Units)) %>%
spread(`Indicator (travel to work)`, Value)
# merge all dataset into one complete dataset by 'FeatureCode' and 'DateCode'
Data <- Expenditure %>%
left_join(Casualties,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
) %>%
left_join(Cards,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
) %>%
left_join(Network,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
) %>%
left_join(Purposes,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
) %>%
left_join(Transport,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
) %>%
left_join(Vehicles,
by = c(
"FeatureCode" = "FeatureCode",
"DateCode" = "DateCode"
)
)
# rename variables
names(Data) <- c(
"FeatureCode", "DateCode", "Expenditure", "Killed_Injured",
"Cards", "Congestion", "Repair", "Mileage", "Work_Bus",
"Business", "School", "Commuting", "Work_Cycling", "Education",
"Health", "Shopping", "Work_Train", "Work_Walking", "Train_Stations",
"Satisfaction", "One_Car", "More_Car", "Without_Car", "Petrol_Diesel"
)
glimpse(Data)
# Transform the DateCode as a factor
Data$DateCode <- as.factor(Data$DateCode)
#### data summary ####
# summary
summary(Data[, -c(1, 2)])
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
ggplot() +
geom_density(aes(x=value), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
# scatter plot
Data[, -c(1, 2)] %>%
gather(key = "variable", value = "value") %>%
mutate(Satisfaction = (Data[, -c(1, 2)] %>% pull(Satisfaction) %>% rep(22))) %>%
ggplot() +
geom_point(aes(x = value, y = Satisfaction), fill="#80C687", color="#80C687", alpha=0.8) +
facet_wrap(~variable, scales = "free")
corr <- cor(na.omit(Data[, -c(1, 2)]))
x <- rep(names(Data[, -c(1, 2)]))
y <- rep(names(Data[, -c(1, 2)]))
corrplot <- expand.grid(X = x, Y = y)
corrplot$Z <- c(corr)
ggplot(corrplot, aes(X, Y, fill = Z)) +
geom_tile(aes(fill = Z, alpha = 0.7), show.legend = FALSE) +
geom_text(aes(label = round(Z, 2))) +
scale_fill_gradient2(
low = muted("#80C687"),
mid = "white",
high = muted("#FF4500"),
midpoint = 0,
breaks = c(-1, 0, 1), labels = c(-1, 0, 1),
limits = c(-1, 1)
) +
theme(
axis.text.x = element_text(
angle = 30,
vjust = .8,
hjust = 0.8
),
axis.title.x = element_blank(),
axis.title.y = element_blank()
)
fit <- lm(Satisfaction ~ ., data = Data[, -1])
summary(fit)
# Diagnostic chart
par(mfrow = c(2, 2))
plot(fit)
boot_coefs
