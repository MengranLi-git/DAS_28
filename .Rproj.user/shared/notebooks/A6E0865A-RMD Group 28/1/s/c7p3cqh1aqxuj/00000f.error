{"frames":[{"func":"tidy(fit2) %>% filter(!term %in% c(\"DateCode2012\", \"DateCode2014\", \n    \"DateCode2015\", \"DateCode2016\", \"DateCode2017\", \"DateCode2018\")) %>% \n    add_row(term = \"DateCode\", estimate = \"-\", std.error = \"-\", \n        statistic = \"-\", p.value = \"-\") %>% kable(caption = \"Model2, selected by Stepwise regression\\\\label{tab:model2}\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"kable(., caption = \"Model2, selected by Stepwise regression\\\\label{tab:model2}\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"add_row(., term = \"DateCode\", estimate = \"-\", std.error = \"-\", \n    statistic = \"-\", p.value = \"-\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rbind_at(.data, df, pos)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_rbind(old, new)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function () \nvec_default_ptype2(x = x, y = y, x_arg = x_arg, y_arg = y_arg, \n    `vctrs:::from_dispatch` = `vctrs:::from_dispatch`, `vctrs:::df_fallback` = `vctrs:::df_fallback`, \n    `vctrs:::s3_fallback` = `vctrs:::s3_fallback`))()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"vec_default_ptype2(x = x, y = y, x_arg = x_arg, y_arg = y_arg, \n    `vctrs:::from_dispatch` = `vctrs:::from_dispatch`, `vctrs:::df_fallback` = `vctrs:::df_fallback`, \n    `vctrs:::s3_fallback` = `vctrs:::s3_fallback`)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_incompatible_type(x, y, x_arg = x_arg, y_arg = y_arg, `vctrs:::from_dispatch` = match_from_dispatch(...))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_incompatible(x, y, x_arg = x_arg, y_arg = y_arg, details = details, \n    ..., message = message, class = c(class, \"vctrs_error_incompatible_type\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop_vctrs(message, class = c(class, \"vctrs_error_incompatible\"), \n    x = x, y = y, details = details, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"abort(message, class = c(class, \"vctrs_error\"), ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"signal_abort(cnd)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stop(fallback)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error: Can't combine `..1$estimate` <double> and `..2$estimate` <character>.\n\u001B[90mRun `rlang::last_error()` to see where the error occurred.\u001B[39m\n"}